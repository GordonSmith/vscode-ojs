{
  "private": true,
  "name": "observable-js",
  "version": "0.4.51",
  "publisher": "GordonSmith",
  "displayName": "Observable JS",
  "description": "Interpreter for ObservableHQ Notebooks - Includes VS Code Notebooks with Observable, Observable \"Markdown\" files with embedded Observable (.omd) and Observable \"JavaScript\" files.",
  "icon": "images/ObservableJS.png",
  "readme": "README.md",
  "categories": [
    "Programming Languages",
    "Data Science",
    "Notebooks",
    "Visualization"
  ],
  "tags": [
    "ObservableHQ",
    "Observable",
    "@observablehq/parser",
    "@observablehq/runtime",
    "@observablehq/inspector",
    "@observablehq/stdlib",
    "@observablehq/notebook-kit",
    "@hpcc-js/observable-compiler"
  ],
  "main": "./dist/extension.js",
  "scripts": {
    "clean": "rimraf --glob out lib* dist* types *.vsix",
    "gen-node-types": "tsc --project tsconfig.json --emitDeclarationOnly",
    "gen-node-watch": "npm run gen-node-types -- -w",
    "gen-webview-types": "tsc --project tsconfig.webview.json --emitDeclarationOnly",
    "gen-webview-watch": "npm run gen-webview-types -- -w",
    "gen-types": "run-p gen-node-types gen-webview-types",
    "build-ts": "node esbuild.mjs --production",
    "build-ts-dev": "node esbuild.mjs --development",
    "build-ts-watch": "node esbuild.mjs --watch --development",
    "build": "run-p gen-types build-ts",
    "watch": "run-p gen-types-watch build-ts-watch",
    "lint": "eslint ./src",
    "lint-fix": "npm run lint -- --fix",
    "test": "run-s lint package",
    "vscode:prepublish": "run-s clean build",
    "publish": "vsce publish",
    "package": "vsce package -o ./observable-js.vsix",
    "rm-hpcc": "rimraf ./node_modules/@hpcc-js",
    "update-major": "npx -y npm-check-updates -u",
    "update": "npx -y npm-check-updates -u -t minor"
  },
  "devDependencies": {
    "@hpcc-js/esbuild-plugins": "1.5.0",
    "@hpcc-js/observable-shim": "3.1.0",
    "@hpcc-js/observablehq-compiler": "3.5.1",
    "@hpcc-js/util": "3.3.10",
    "@observablehq/inspector": "5.0.1",
    "@observablehq/notebook-kit": "1.2.0",
    "@observablehq/runtime": "5.9.9",
    "@observablehq/stdlib": "5.8.8",
    "@types/mocha": "10.0.10",
    "@types/node": "24.3.1",
    "@types/vscode": "1.102.0",
    "@types/vscode-notebook-renderer": "1.72.4",
    "@vscode/extension-telemetry": "1.0.0",
    "@vscode/test-electron": "2.5.2",
    "@vscode/vsce": "3.6.0",
    "acorn": "8.15.0",
    "acorn-walk": "8.3.4",
    "assert": "2.1.0",
    "browserify-zlib": "0.2.0",
    "buffer": "6.0.3",
    "esbuild": "0.25.9",
    "esbuild-copy-static-files": "0.1.0",
    "esbuild-plugin-text-replace": "1.3.0",
    "esbuild-plugin-umd-wrapper": "3.0.0",
    "eslint": "9.35.0",
    "eslint-plugin-react-hooks": "5.2.0",
    "eslint-plugin-unused-imports": "^4.2.0",
    "globals": "16.3.0",
    "jsdom": "26.1.0",
    "mocha": "11.7.2",
    "node-fetch": "3.3.2",
    "npm-run-all": "4.1.5",
    "os-browserify": "0.3.0",
    "path-browserify": "1.0.1",
    "rimraf": "6.0.1",
    "stream-browserify": "3.0.0",
    "tslib": "2.8.1",
    "typescript": "5.9.2",
    "typescript-eslint": "8.42.0",
    "uuid": "11.1.0",
    "vitest": "^3.2.4"
  },
  "author": {
    "name": "Gordon Smith"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/GordonSmith/vscode-ojs.git"
  },
  "engines": {
    "vscode": "^1.102.0"
  },
  "extensionDependencies": [],
  "activationEvents": [
    "onNotebook:ojs-notebook",
    "onNotebook:notebook-kit",
    "onLanguage:html",
    "workspaceContains:**/*.html",
    "onWebviewPanel:OJSPreview"
  ],
  "contributes": {
    "languages": [
      {
        "id": "ojs",
        "extensions": [
          "ojs",
          "OJS"
        ],
        "aliases": [
          "Observable JavaScript (OJS)"
        ],
        "configuration": "./ojs.configuration.json"
      },
      {
        "id": "omd",
        "extensions": [
          "omd",
          "OMD"
        ],
        "aliases": [
          "Observable Markdown (OMD)"
        ],
        "configuration": "./omd.configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "ojs",
        "scopeName": "source.ojs",
        "path": "./syntaxes/ojs.tmLanguage.json"
      },
      {
        "language": "omd",
        "scopeName": "text.html.markdown",
        "path": "./syntaxes/omd.tmLanguage.json",
        "embeddedLanguages": {
          "meta.embedded.block.html": "html",
          "source.js": "javascript",
          "source.css": "css",
          "meta.embedded.block.frontmatter": "yaml",
          "meta.embedded.block.css": "css",
          "meta.embedded.block.ini": "ini",
          "meta.embedded.block.java": "java",
          "meta.embedded.block.lua": "lua",
          "meta.embedded.block.makefile": "makefile",
          "meta.embedded.block.perl": "perl",
          "meta.embedded.block.r": "r",
          "meta.embedded.block.ruby": "ruby",
          "meta.embedded.block.php": "php",
          "meta.embedded.block.sql": "sql",
          "meta.embedded.block.vs_net": "vs_net",
          "meta.embedded.block.xml": "xml",
          "meta.embedded.block.xsl": "xsl",
          "meta.embedded.block.yaml": "yaml",
          "meta.embedded.block.dosbatch": "dosbatch",
          "meta.embedded.block.clojure": "clojure",
          "meta.embedded.block.coffee": "coffee",
          "meta.embedded.block.c": "c",
          "meta.embedded.block.cpp": "cpp",
          "meta.embedded.block.diff": "diff",
          "meta.embedded.block.dockerfile": "dockerfile",
          "meta.embedded.block.go": "go",
          "meta.embedded.block.groovy": "groovy",
          "meta.embedded.block.pug": "jade",
          "meta.embedded.block.javascript": "javascript",
          "meta.embedded.block.json": "json",
          "meta.embedded.block.less": "less",
          "meta.embedded.block.objc": "objc",
          "meta.embedded.block.scss": "scss",
          "meta.embedded.block.perl6": "perl6",
          "meta.embedded.block.powershell": "powershell",
          "meta.embedded.block.python": "python",
          "meta.embedded.block.rust": "rust",
          "meta.embedded.block.scala": "scala",
          "meta.embedded.block.shellscript": "shellscript",
          "meta.embedded.block.typescript": "typescript",
          "meta.embedded.block.typescriptreact": "typescriptreact",
          "meta.embedded.block.csharp": "csharp",
          "meta.embedded.block.fsharp": "fsharp"
        }
      }
    ],
    "commands": [
      {
        "category": "OJS",
        "command": "ojs.checkSyntax",
        "title": "Check Syntax.",
        "description": "Syntax check OJS code."
      },
      {
        "category": "OJS",
        "command": "ojs.preview",
        "title": "Preview Web Page",
        "description": "Preview Observable Page.",
        "icon": {
          "dark": "./images/preview-dark.svg",
          "light": "./images/preview.svg"
        }
      },
      {
        "category": "OJS",
        "command": "ojs.import",
        "title": "Import notebook cells",
        "description": "Imports notebook cells from ObservableHQ."
      },
      {
        "category": "OJS",
        "command": "ojs.export",
        "title": "Export to HTML",
        "description": "Export as a self contained HTML file.",
        "icon": {
          "dark": "./images/export-dark.svg",
          "light": "./images/export.svg"
        }
      },
      {
        "category": "OJS",
        "command": "ojs.exportECL",
        "title": "Export to ECL",
        "description": "Export as a self contained ECL file.",
        "icon": {
          "dark": "./images/export-dark.svg",
          "light": "./images/export.svg"
        }
      },
      {
        "category": "OJS",
        "command": "ojs.download",
        "title": "Download Notebook",
        "description": "Download notebook from observalehq.com"
      },
      {
        "category": "Observable Kit",
        "command": "observable-kit.build",
        "title": "Build Static Site",
        "description": "Build static site using Notebook Kit"
      },
      {
        "category": "Observable Kit",
        "command": "observable-kit.createNotebook",
        "title": "Observable Kit Notebook",
        "description": "Create a new ObservableHQ Notebook notebook"
      },
      {
        "category": "Observable Kit",
        "command": "observable-kit.convertFromLegacy",
        "title": "Convert from Legacy Format",
        "description": "Convert .ojsnb file to ObservableHQ Notebook format"
      },
      {
        "category": "Observable Kit",
        "command": "observable-kit.setupWorkspace",
        "title": "Setup Workspace",
        "description": "Setup ObservableHQ Notebook in current workspace"
      },
      {
        "category": "Observable Kit",
        "command": "observable-kit.export",
        "title": "Export",
        "description": "Export the current ObservableHQ Notebook",
        "icon": {
          "dark": "./images/export-dark.svg",
          "light": "./images/export.svg"
        }
      },
      {
        "category": "Observable Kit",
        "command": "observable-kit.notebook.setTitle",
        "title": "Title",
        "description": "Edit the notebook title metadata",
        "icon": "$(edit)"
      },
      {
        "category": "Observable Kit",
        "command": "observable-kit.notebook.setTheme",
        "title": "Theme",
        "description": "Choose the visual theme for this notebook",
        "icon": "$(symbol-color)"
      },
      {
        "category": "Observable Kit",
        "command": "observable-kit.notebook.setReadOnly",
        "title": "read/write",
        "description": "Switch notebook to read-only mode",
        "icon": "$(unlock)"
      },
      {
        "category": "Observable Kit",
        "command": "observable-kit.notebook.setReadWrite",
        "title": "read only",
        "description": "Switch notebook to read/write mode",
        "icon": "$(lock)"
      },
      {
        "category": "Observable Kit",
        "command": "observable-kit.openHtmlAsNotebook",
        "title": "Open HTML as Observable Notebook",
        "description": "Open HTML file as Observable Notebook (without renaming)"
      },
      {
        "category": "Observable Kit",
        "command": "observable-kit.switchToNotebookView",
        "title": "Switch to Notebook View",
        "description": "Switch HTML file to notebook view",
        "icon": "$(book)"
      },
      {
        "category": "Observable Kit",
        "command": "observable-kit.switchToTextView",
        "title": "Switch to Text View",
        "description": "Switch notebook back to HTML text view",
        "icon": "$(edit)"
      },
      {
        "command": "ojs.cell.name",
        "title": "Result Name",
        "icon": {
          "dark": "./resources/dark/string.svg",
          "light": "./resources/light/string.svg"
        }
      },
      {
        "command": "ojs.cell.db",
        "title": "Database Name",
        "icon": {
          "dark": "./resources/dark/server-process.svg",
          "light": "./resources/light/server-process.svg"
        }
      },
      {
        "command": "observable-kit.cell.pin",
        "title": "Pin Source Code",
        "description": "Pin this cell to make its source code visible in the output",
        "icon": "$(pin)"
      },
      {
        "command": "observable-kit.cell.unpin",
        "title": "Unpin Source Code",
        "description": "Unpin this cell to hide its source code from the output",
        "icon": "$(pinned)"
      },
      {
        "command": "observable-kit.cell.hide",
        "title": "Hide Cell",
        "description": "Hide this cell's output in the notebook",
        "icon": "$(eye-closed)"
      },
      {
        "command": "observable-kit.cell.show",
        "title": "Show Cell",
        "description": "Show this cell's output in the notebook",
        "icon": "$(eye)"
      }
    ],
    "menus": {
      "file/newFile": [
        {
          "command": "observable-kit.createNotebook"
        }
      ],
      "commandPalette": [
        {
          "command": "ojs.checkSyntax",
          "when": "resourceLangId == ojs || resourceLangId == omd || notebookType == ojs-notebook"
        },
        {
          "command": "ojs.preview",
          "when": "resourceLangId == ojs || resourceLangId == omd || notebookType == ojs-notebook"
        },
        {
          "command": "ojs.export",
          "when": "resourceLangId == ojs || resourceLangId == omd || notebookType == ojs-notebook"
        },
        {
          "command": "ojs.exportECL",
          "when": "resourceLangId == ojs || resourceLangId == omd"
        },
        {
          "command": "observable-kit.openHtmlAsNotebook",
          "when": "resourceLangId == html"
        },
        {
          "command": "observable-kit.export",
          "when": "notebookType == notebook-kit-default || notebookType == notebook-kit-option"
        },
        {
          "command": "observable-kit.switchToNotebookView",
          "when": "resourceLangId == html || resourceLangId == javascript"
        },
        {
          "command": "observable-kit.switchToTextView",
          "when": "notebookType == notebook-kit-default || notebookType == notebook-kit-option"
        }
      ],
      "explorer/context": [
        {
          "when": "resourceLangId == ojs || resourceLangId == omd || notebookType == ojs-notebook",
          "command": "ojs.preview",
          "group": "navigation@998"
        },
        {
          "when": "resourceLangId == html",
          "command": "observable-kit.openHtmlAsNotebook",
          "group": "observable@101"
        }
      ],
      "editor/context": [
        {
          "when": "resourceLangId == ojs || resourceLangId == omd || notebookType == ojs-notebook",
          "command": "ojs.preview",
          "group": "navigation@960"
        },
        {
          "when": "resourceLangId == ojs || resourceLangId == omd",
          "command": "ojs.import",
          "group": "navigation@970"
        },
        {
          "when": "resourceLangId == ojs || resourceLangId == omd",
          "command": "ojs.export",
          "group": "navigation@980"
        },
        {
          "when": "resourceLangId == ojs || resourceLangId == omd",
          "command": "ojs.exportECL",
          "group": "navigation@990"
        },
        {
          "when": "notebookType == notebook-kit-default || notebookType == notebook-kit-option",
          "command": "observable-kit.export",
          "group": "navigation@980"
        }
      ],
      "editor/title": [
        {
          "when": "resourceLangId == ojs || resourceLangId == omd || notebookType == ojs-notebook",
          "command": "ojs.export",
          "group": "navigation@997"
        },
        {
          "when": "resourceLangId == ojs || resourceLangId == omd || notebookType == ojs-notebook",
          "command": "ojs.preview",
          "group": "navigation@998"
        },
        {
          "when": "(resourceLangId == html || resourceLangId == javascript) && observable-kit.isObservableNotebook",
          "command": "observable-kit.switchToNotebookView",
          "group": "navigation@999"
        },
        {
          "when": "notebookType == notebook-kit-default || notebookType == notebook-kit-option",
          "command": "observable-kit.switchToTextView",
          "group": "navigation@999"
        },
        {
          "when": "notebookType == notebook-kit-default || notebookType == notebook-kit-option",
          "command": "observable-kit.export",
          "group": "navigation@997"
        }
      ],
      "notebook/cell/title": [
        {
          "command": "ojs.cell.name",
          "when": "notebookType == ojs-notebook && cellLangId == sql",
          "group": "inline@400"
        },
        {
          "command": "ojs.cell.db",
          "when": "notebookType == ojs-notebook && cellLangId == sql",
          "group": "inline@401"
        },
        {
          "command": "observable-kit.cell.pin",
          "when": "(notebookType == notebook-kit-default || notebookType == notebook-kit-option) && !observable-kit.currentCellPinned",
          "group": "inline@100"
        },
        {
          "command": "observable-kit.cell.unpin",
          "when": "(notebookType == notebook-kit-default || notebookType == notebook-kit-option) && observable-kit.currentCellPinned",
          "group": "inline@100"
        },
        {
          "command": "observable-kit.cell.hide",
          "when": "(notebookType == notebook-kit-default || notebookType == notebook-kit-option) && !observable-kit.currentCellHidden",
          "group": "inline@101"
        },
        {
          "command": "observable-kit.cell.show",
          "when": "(notebookType == notebook-kit-default || notebookType == notebook-kit-option) && observable-kit.currentCellHidden",
          "group": "inline@101"
        }
      ],
      "notebook/toolbar": [
        {
          "command": "observable-kit.notebook.setTitle",
          "when": "notebookType == notebook-kit-default || notebookType == notebook-kit-option",
          "group": "navigation@100"
        },
        {
          "command": "observable-kit.notebook.setTheme",
          "when": "notebookType == notebook-kit-default || notebookType == notebook-kit-option",
          "group": "navigation@101"
        },
        {
          "command": "observable-kit.notebook.setReadOnly",
          "when": "(notebookType == notebook-kit-default || notebookType == notebook-kit-option) && !observable-kit.notebook.readOnly",
          "group": "navigation@102"
        },
        {
          "command": "observable-kit.notebook.setReadWrite",
          "when": "(notebookType == notebook-kit-default || notebookType == notebook-kit-option) && observable-kit.notebook.readOnly",
          "group": "navigation@102"
        }
      ]
    },
    "keybindings": [
      {
        "command": "ojs.checkSyntax",
        "key": "f7",
        "when": "resourceLangId == ojs || resourceLangId == omd"
      },
      {
        "command": "ojs.preview",
        "key": "ctrl+k v",
        "mac": "cmd+k v",
        "when": "resourceLangId == ojs || resourceLangId == omd || notebookType == ojs-notebook"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "OJS (Observable JS)",
      "properties": {
        "ojs.refreshPreviewOnSave": {
          "type": "boolean",
          "scope": "resource",
          "default": true,
          "description": "Refresh preview on save."
        },
        "ojs.showRuntimeValues": {
          "type": "boolean",
          "scope": "resource",
          "default": false,
          "description": "Show runtime values as diagnostic info."
        },
        "ojs.autoDetectObservableNotebooks": {
          "type": "boolean",
          "scope": "resource",
          "default": true,
          "description": "Automatically detect Observable notebooks in HTML files and prompt to open as notebook."
        }
      }
    },
    "notebooks": [
      {
        "id": "ojs-notebook",
        "type": "ojs-notebook",
        "displayName": "OJS Notebook",
        "selector": [
          {
            "filenamePattern": "*.ojsnb"
          }
        ]
      },
      {
        "id": "notebook-kit-default",
        "type": "notebook-kit-default",
        "displayName": "ObservableHQ Notebook",
        "selector": [
          {
            "filenamePattern": "*.observable.html"
          },
          {
            "filenamePattern": "*.observable.js"
          }
        ],
        "priority": "default"
      },
      {
        "id": "notebook-kit-option",
        "type": "notebook-kit-option",
        "displayName": "ObservableHQ Notebook",
        "selector": [
          {
            "filenamePattern": "*.html"
          },
          {
            "filenamePattern": "*.js"
          }
        ],
        "priority": "option"
      }
    ],
    "notebookRenderer": [
      {
        "id": "ojs-notebook-renderer",
        "displayName": "ObservableJS Renderer",
        "entrypoint": "./dist/ojsRenderer.js",
        "mimeTypes": [
          "application/gordonsmith.ojs+json"
        ],
        "requiresMessaging": "always"
      },
      {
        "id": "observable-kit-renderer",
        "displayName": "ObservableHQ Notebook Renderer",
        "entrypoint": "./dist/observable-kit-renderer.js",
        "mimeTypes": [
          "application/observable-kit+json"
        ],
        "requiresMessaging": "optional"
      }
    ]
  }
}